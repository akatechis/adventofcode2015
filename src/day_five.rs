
fn has_reflection_about_char(candidate: &str) -> bool {
  if candidate.len() < 3 {
    return false;
  }

  let mut i = 1;
  while i <= candidate.len() - 2 {
    let a = candidate.chars().nth(i - 1);
    let b = candidate.chars().nth(i + 1);

    if a == b {
      return true;
    }
    i += 1;
  }
  false
}

fn has_non_overlapping_repeat(candidate: &str) -> bool {
  let mut i = 0;
  while i < candidate.len() - 1 {
    let a = candidate.chars().nth(i);
    let b = candidate.chars().nth(i + 1);
    let pair = format!("{}{}", a.unwrap(), b.unwrap());
    let lidx = candidate.find(&pair).unwrap();
    let ridx = candidate.rfind(&pair).unwrap();

    let distance = ridx - lidx;
    if distance > 1 {
      return true;
    }
    i += 1;
  }
  false
}

fn has_three_vowels(candidate: &str) -> bool {
  let mut vowels = 0;
  for ch in candidate.chars() {
    if ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' {
      vowels += 1;
      if vowels == 3 {
        return true;
      }
    }
  }
  false
}

fn has_repeat_char(candidate: &str) -> bool {
  let mut i = 0;
  while i < candidate.len() - 1 {
    let a = candidate.chars().nth(i);
    let b = candidate.chars().nth(i + 1);

    if a == b {
      return true;
    } else {
      i += 1;
    }
  }
  false
}

fn has_blacklist_string(candidate: &str) -> bool {
  candidate.contains("ab") ||
  candidate.contains("cd") ||
  candidate.contains("pq") ||
  candidate.contains("xy")
}

fn nice_one(candidate: &str) -> bool {
  has_three_vowels(candidate) &&
  has_repeat_char(candidate) &&
  !has_blacklist_string(candidate)
}

fn nice_two(candidate: &str) -> bool {
  has_non_overlapping_repeat(candidate) &&
  has_reflection_about_char(candidate)
}

fn count_nice_strings<P>(strings: &Vec<String>, pred: P) -> usize
where P: Fn(&str) -> bool {
  strings.iter().filter(|&s| pred(s)).count()
}

fn part_1(strings: &Vec<String>) {
  let nice_strings = count_nice_strings(strings, nice_one);
  println!("(1) Nice strings = {}", nice_strings);
}

fn part_2(strings: &Vec<String>) {
  let nice_strings = count_nice_strings(strings, nice_two);
  println!("(1) Nice strings = {}", nice_strings);
}

pub fn main () {
  let strings = data::create();
  part_1(&strings);
  part_2(&strings);
}

#[cfg(test)]
mod tests {
  use super::*;

  #[test]
  fn has_three_vowels_works() {
    assert_eq!(false, has_three_vowels("bbbbbb"));
    assert_eq!(true, has_three_vowels("ababab"));
    assert_eq!(true, has_three_vowels("aaa"));
    assert_eq!(true, has_three_vowels("aeiou"));
    assert_eq!(true, has_three_vowels("aeaeaeaeaeae"));
    assert_eq!(true, has_three_vowels("aaaeeeqwqwqw"));
    assert_eq!(false, has_three_vowels("aeqwqwqw"));
  }

  #[test]
  fn has_repeat_char_works() {
    assert_eq!(true, has_repeat_char("ugknbfddgicrmopn"));
    assert_eq!(true, has_repeat_char("aaa"));
    assert_eq!(false, has_repeat_char("abababab"));
  }

  #[test]
  fn has_blacklist_string_works() {
    assert_eq!(false, has_blacklist_string("ugknbfddgicrmopn"));
    assert_eq!(true, has_blacklist_string("abababab"));
    assert_eq!(true, has_blacklist_string("cccccdcd"));
    assert_eq!(true, has_blacklist_string("pq"));
    assert_eq!(true, has_blacklist_string("xxxxyyyyy"));
  }

  #[test]
  fn has_non_overlapping_repeat_works() {
    assert_eq!(true, has_non_overlapping_repeat("xyxy"));
    assert_eq!(true, has_non_overlapping_repeat("aabcdefgaa"));
    assert_eq!(false, has_non_overlapping_repeat("aaa"));
    assert_eq!(false, has_non_overlapping_repeat("aa"));
    assert_eq!(true, has_non_overlapping_repeat("aaaa"));
  }

  #[test]
  fn has_reflection_about_char_works() {
    assert_eq!(true, has_reflection_about_char("xyx"));
    assert_eq!(true, has_reflection_about_char("aaa"));
    assert_eq!(true, has_reflection_about_char("abcdefeghi"));
    assert_eq!(true, has_reflection_about_char("aaaaaaaaa"));
    assert_eq!(false, has_reflection_about_char("abcdefg"));
    assert_eq!(false, has_reflection_about_char("zyyzzyyzzyyz"));
  }

  #[test]
  fn nice_one_works() {
    assert_eq!(true, nice_one("ugknbfddgicrmopn"));
    assert_eq!(true, nice_one("aaa"));
    assert_eq!(false, nice_one("jchzalrnumimnmhp"));
    assert_eq!(false, nice_one("haegwjzuvuyypxyu"));
    assert_eq!(false, nice_one("dvszwmarrgswjxmb"));
  }

  #[test]
  fn nice_two_works() {
    assert_eq!(true, nice_two("qjhvhtzxzqqjkmpb"));
    assert_eq!(true, nice_two("xxyxx"));
    assert_eq!(false, nice_two("uurcxstgmygtbstg"));
    assert_eq!(false, nice_two("ieodomkazucvgmuy"));
  }

  #[test]
  fn part_one_works() {
    assert_eq!(258, count_nice_strings(&data::create(), nice_one));
  }
}

mod data {
  pub fn create() -> Vec<String> {
    vec![
      "rthkunfaakmwmush".to_string(),
      "qxlnvjguikqcyfzt".to_string(),
      "sleaoasjspnjctqt".to_string(),
      "lactpmehuhmzwfjl".to_string(),
      "bvggvrdgjcspkkyj".to_string(),
      "nwaceixfiasuzyoz".to_string(),
      "hsapdhrxlqoiumqw".to_string(),
      "lsitcmhlehasgejo".to_string(),
      "hksifrqlsiqkzyex".to_string(),
      "dfwuxtexmnvjyxqc".to_string(),
      "iawwfwylyrcbxwak".to_string(),
      "mamtkmvvaeeifnve".to_string(),
      "qiqtuihvsaeebjkd".to_string(),
      "skerkykytazvbupg".to_string(),
      "kgnxaylpgbdzedoo".to_string(),
      "plzkdktirhmumcuf".to_string(),
      "pexcckdvsrahvbop".to_string(),
      "jpocepxixeqjpigq".to_string(),
      "vnsvxizubavwrhtc".to_string(),
      "lqveclebkwnajppk".to_string(),
      "ikbzllevuwxscogb".to_string(),
      "xvfmkozbxzfuezjt".to_string(),
      "ukeazxczeejwoxli".to_string(),
      "tvtnlwcmhuezwney".to_string(),
      "hoamfvwwcarfuqro".to_string(),
      "wkvnmvqllphnsbnf".to_string(),
      "kiggbamoppmfhmlf".to_string(),
      "ughbudqakuskbiik".to_string(),
      "avccmveveqwhnjdx".to_string(),
      "llhqxueawluwmygt".to_string(),
      "mgkgxnkunzbvakiz".to_string(),
      "fwjbwmfxhkzmwtsq".to_string(),
      "kzmtudrtznhutukg".to_string(),
      "gtvnosbfetqiftmf".to_string(),
      "aoifrnnzufvhcwuy".to_string(),
      "cldmefgeuwlbxpof".to_string(),
      "xdqfinwotmffynqz".to_string(),
      "pajfvqhtlbhmyxai".to_string(),
      "jkacnevnrxpgxqal".to_string(),
      "esxqayxzvortsqgz".to_string(),
      "glfoarwvkzgybqlz".to_string(),
      "xdjcnevwhdfsnmma".to_string(),
      "jyjktscromovdchb".to_string(),
      "pvguwmhdvfxvapmz".to_string(),
      "iheglsjvxmkzgdbu".to_string(),
      "lwjioxdbyhqnwekv".to_string(),
      "zcoguugygkwizryj".to_string(),
      "ogvnripxxfeqpxdh".to_string(),
      "hkvajhsbfnzsygbm".to_string(),
      "cnjqeykecopwabpq".to_string(),
      "wojjtbcjinoiuhsj".to_string(),
      "kpwpvgxbyzczdzjq".to_string(),
      "wrvhylisemlewgzk".to_string(),
      "uiezkmnhilfzahtm".to_string(),
      "mucteynnuxpxzmvt".to_string(),
      "zaiwbgxefusfhmst".to_string(),
      "apptbogpxivjwink".to_string(),
      "qryboarjtwjhjgjb".to_string(),
      "irehxupgyseaahzd".to_string(),
      "fobstqxguyubggoh".to_string(),
      "ysriumfghtxtfxwe".to_string(),
      "auchdmasvfeliptw".to_string(),
      "mztuhefcrnknyrdl".to_string(),
      "tyjmkhihbwabjtaa".to_string(),
      "yquzkdtgsljkaebw".to_string(),
      "almvdvofjtkyzbmd".to_string(),
      "emqftiuqqpdwwbrv".to_string(),
      "hrrhmqfpepvbawvw".to_string(),
      "atrkgykycvgxbpyb".to_string(),
      "dhthetnealksbdan".to_string(),
      "zzqafhgicubptiyo".to_string(),
      "qdtaieaziwhbttnw".to_string(),
      "kyskgapdgqrtrefw".to_string(),
      "edwzlpqztpydmdlr".to_string(),
      "awszjnlmvlyqsuvl".to_string(),
      "kcrtmtshtsgixvcp".to_string(),
      "jtaskgkijivbbkri".to_string(),
      "mmggfwapsetemiuj".to_string(),
      "itagrrnjbnmhgppd".to_string(),
      "uqmbezechbrpbnqq".to_string(),
      "nnyimvtascflpzsa".to_string(),
      "knqeimypkdttyudj".to_string(),
      "vgoiyvtvegwyxjjd".to_string(),
      "qubzdxsbecktzrho".to_string(),
      "zehojtvktsbbxijb".to_string(),
      "xepmjrekwcgoxyoh".to_string(),
      "bnptxnocbpbqbyeq".to_string(),
      "sfvynsywscbnymos".to_string(),
      "dsltfbpcmffbluba".to_string(),
      "kncrlzlmkikylppa".to_string(),
      "siwudrvmildgaozv".to_string(),
      "jhhefbvbvneqzvtc".to_string(),
      "lqjgztxitbuccqbp".to_string(),
      "himmwlbhjqednltt".to_string(),
      "vwognchyertnnfil".to_string(),
      "eejakhapkbodrntf".to_string(),
      "qxuijkkhhlskgrba".to_string(),
      "aankpfxxicfpllog".to_string(),
      "vuxykvljyqexfhrn".to_string(),
      "epgygflbxlbwybzq".to_string(),
      "zuxmwvetmvcszayc".to_string(),
      "xttwhfqmemgtjnkf".to_string(),
      "hftwldmivyfunfvl".to_string(),
      "bejlyxfamzliilrj".to_string(),
      "zkehazcxyyvtrxti".to_string(),
      "dsgafehmcfpycvgz".to_string(),
      "igremmqdojqdvwmb".to_string(),
      "swnjzvmhcslvkmiw".to_string(),
      "fchzbfbmtqtxmaef".to_string(),
      "xwjmyyrlznxrcytq".to_string(),
      "brwcwzpcvbwdrthl".to_string(),
      "fvrlridacsiojdmb".to_string(),
      "mhsturxdlmtxozvy".to_string(),
      "usxvqyrwywdyvjvz".to_string(),
      "gwazuslvmarfpnzm".to_string(),
      "rgkbudaqsnolbcqo".to_string(),
      "dpxvlbtavdhdedkj".to_string(),
      "nnqmjzejhodyfgyd".to_string(),
      "ozoazxkfhujgtzvy".to_string(),
      "psdgvhzdiwnuaxpl".to_string(),
      "tznkilxpogbzgijz".to_string(),
      "wnpytcseirtborhh".to_string(),
      "lhauurlfsmagfges".to_string(),
      "oqfbzixnlywkzwwy".to_string(),
      "yoehapoyjpakziom".to_string(),
      "vtjftdcsfdzbmtrn".to_string(),
      "zcshfnodiwixcwqj".to_string(),
      "wapbxpaxgjvtntkm".to_string(),
      "qfyypkyvblrtaenh".to_string(),
      "bsxhbxkovgukhcza".to_string(),
      "kitdmvpiwzdonoyy".to_string(),
      "slkbhxmehzavbdsf".to_string(),
      "dovzjouqkzkcmbkl".to_string(),
      "qpbigdcqkfnfkxvq".to_string(),
      "eaiaquhnesvtcdsv".to_string(),
      "mhbezlhqojdsuryj".to_string(),
      "dqprkkzxlghkoccx".to_string(),
      "xqepmorryeivhrhm".to_string(),
      "frwmrjpezwmjflvf".to_string(),
      "gjpfgwghodfslwlf".to_string(),
      "fzyvajisdjbhfthq".to_string(),
      "pvzxkxdscdbilrdb".to_string(),
      "mtaxmqcnagmplvnm".to_string(),
      "rlyafujuuydrqwnc".to_string(),
      "gvqvrcxwyohufehq".to_string(),
      "lmrkircgfrfusmfd".to_string(),
      "ovlpnkxcpimyaspb".to_string(),
      "xhyjremmqhdqywju".to_string(),
      "pxfczlhpzbypfarm".to_string(),
      "utjhprzhtggausyp".to_string(),
      "utzkkzlnyskjtlqh".to_string(),
      "cecbcnxpazvkedic".to_string(),
      "xwvoaggihrbhmijq".to_string(),
      "krredhmtwlfmyagw".to_string(),
      "lwfhxgbknhwudkzw".to_string(),
      "vyczyvuxzmhxmdmn".to_string(),
      "swcoaosyieqekwxx".to_string(),
      "waohmlfdftjphpqw".to_string(),
      "gaclbbfqtiqasijg".to_string(),
      "ybcyaxhluxmiiagp".to_string(),
      "xgtxadsytgaznndw".to_string(),
      "wzqhtjqpaihyxksm".to_string(),
      "fdwltsowtcsmsyhm".to_string(),
      "rpoelfbsararhfja".to_string(),
      "tswgdacgnlhzwcvz".to_string(),
      "xjgbhdlxllgeigor".to_string(),
      "ksgthvrewhesuvke".to_string(),
      "whgooqirdjwsfhgi".to_string(),
      "toztqrxzavxmjewp".to_string(),
      "hbkayxxahipxnrtl".to_string(),
      "lazimkmdnhrtflcu".to_string(),
      "ndoudnupbotwqgmr".to_string(),
      "niwuwyhnudxmnnlk".to_string(),
      "hlmihzlrpnrtwekr".to_string(),
      "wzkttdudlgbvhqnc".to_string(),
      "rfyzzgytifkqlxjx".to_string(),
      "skddrtwxcyvhmjtb".to_string(),
      "mljspkvjxbuyhari".to_string(),
      "xwkhozaoancnwaud".to_string(),
      "nookruxkdffeymdz".to_string(),
      "oiqfvpxmcplyfgoa".to_string(),
      "qoxggshmrjlzarex".to_string(),
      "lsroezewzkrwdchx".to_string(),
      "nkoonmvdydgzspcl".to_string(),
      "lygxeqztdqklabov".to_string(),
      "jempjyzupwboieye".to_string(),
      "hpdaqkhjiddzybly".to_string(),
      "cvcizjlnzdjfjlbh".to_string(),
      "vaaddsbkcgdjhbkj".to_string(),
      "pjxmtxoyrkmpnenf".to_string(),
      "ujqdvyqnkbusxlps".to_string(),
      "miyvzkzqploqaceb".to_string(),
      "gapcsbkulicvlnmo".to_string(),
      "xqpcyriqhjhaeqlj".to_string(),
      "ipumdjwlldzqhmgh".to_string(),
      "swdstecnzttmehxe".to_string(),
      "ucmqordmzgioclle".to_string(),
      "aywgqhmqlrzcxmqx".to_string(),
      "ptkgyitqanvjocjn".to_string(),
      "wcesxtmzbzqedgfl".to_string(),
      "rnetcouciqdesloe".to_string(),
      "chpnkwfdjikqxwms".to_string(),
      "onpyrjowcuzdtzfg".to_string(),
      "tydnqwaqwkskcycz".to_string(),
      "dhamguhmkjzzeduy".to_string(),
      "oecllwyrlvsyeeuf".to_string(),
      "gsukajpoewxhqzft".to_string(),
      "sgdnffdixtxidkih".to_string(),
      "pqqzjxzydcvwwkmw".to_string(),
      "wnjltltufkgnrtgm".to_string(),
      "hylaicyfrqwolnaq".to_string(),
      "ovfnugjjwyfjunkm".to_string(),
      "xknyzsebmqodvhcl".to_string(),
      "uwfmrjzjvvzoaraw".to_string(),
      "zaldjvlcnqbessds".to_string(),
      "zphvjuctrsksouvz".to_string(),
      "ceqbneqjwyshgyge".to_string(),
      "wmelhaoylbyxcson".to_string(),
      "nghuescieaujhgkj".to_string(),
      "dhjmflwwnskrdpph".to_string(),
      "exvanqpoofjgiubf".to_string(),
      "aidkmnongrzjhsvn".to_string(),
      "mdbtkyjzpthewycc".to_string(),
      "izctbwnzorqwcqwz".to_string(),
      "hrvludvulaopcbrv".to_string(),
      "mrsjyjmjmbxyqbnz".to_string(),
      "sjdqrffsybmijezd".to_string(),
      "geozfiuqmentvlci".to_string(),
      "duzieldieeomrmcg".to_string(),
      "ehkbsecgugsulotm".to_string(),
      "cymnfvxkxeatztuq".to_string(),
      "bacrjsgrnbtmtmdl".to_string(),
      "kbarcowlijtzvhfb".to_string(),
      "uwietqeuupewbjav".to_string(),
      "ypenynjeuhpshdxw".to_string(),
      "fwwqvpgzquczqgso".to_string(),
      "wjegagwkzhmxqmdi".to_string(),
      "vocvrudgxdljwhcz".to_string(),
      "nnytqwspstuwiqep".to_string(),
      "axapfrlcanzgkpjs".to_string(),
      "lklrjiszochmmepj".to_string(),
      "gxadfpwiovjzsnpi".to_string(),
      "qidsjxzgwoqdrfie".to_string(),
      "wgszciclvsdxxoej".to_string(),
      "kwewlmzxruoojlaq".to_string(),
      "ywhahockhioribnz".to_string(),
      "ucbqdveieawzucef".to_string(),
      "mdyyzmfoaxmzddfv".to_string(),
      "hsxnabxyqfzceijv".to_string(),
      "vivruyvbrtaqeebr".to_string(),
      "jxfeweptjtgvmcjc".to_string(),
      "mmypqxmpurhculwd".to_string(),
      "mpiaphksvctnryli".to_string(),
      "xqzqnuxmuzylkkun".to_string(),
      "fndmtefjxxcygtji".to_string(),
      "dnorqlldvzqprird".to_string(),
      "nutokyajmjpwjaqu".to_string(),
      "vlupfperqyqkjcaj".to_string(),
      "dgihjeokrphkpdnk".to_string(),
      "nvbdyrlheqzixuku".to_string(),
      "mhrkntnxvsmvrpka".to_string(),
      "kvhkyanlhhymwljf".to_string(),
      "fhipumtegqfgeqqw".to_string(),
      "vpfjgveycdefuabu".to_string(),
      "kzincljffncylcsf".to_string(),
      "tsezxymwmjtyegqw".to_string(),
      "wxhcdrqedkdcwxli".to_string(),
      "ueihvxviirnooomi".to_string(),
      "kfelyctfvwyovlyh".to_string(),
      "horzapuapgtvzizz".to_string(),
      "iiqkdpmfvhwwzmtj".to_string(),
      "rsaclclupiicstff".to_string(),
      "quwkkhrafypkaoum".to_string(),
      "gyrgkgmwqfkeudfe".to_string(),
      "noydhbqacwptyfmy".to_string(),
      "efwwuipzgtkwffhf".to_string(),
      "suyojcitomdxsduh".to_string(),
      "lbcxnsykojkufkml".to_string(),
      "zpglsvoutvzkgdep".to_string(),
      "usgrufyvgsbsmbpr".to_string(),
      "katrrwuhwvunjqor".to_string(),
      "btngwrpcxoyfbgbc".to_string(),
      "bxjscjdiowjrkpns".to_string(),
      "nwxvnfrnlkgqxvhf".to_string(),
      "ikhyqkvljucgdlag".to_string(),
      "xibnxsjopmxvflkl".to_string(),
      "mzplumcfivqcjqnz".to_string(),
      "jqflcxoxzlbwlxry".to_string(),
      "fcscvmfepdxrshxe".to_string(),
      "wlpffwunffklzbuc".to_string(),
      "emvrlqajjgwzfmle".to_string(),
      "rhaheurtzrfoqkyq".to_string(),
      "ifuuhpxmadaysfsx".to_string(),
      "ncyfvleyzqntpcoo".to_string(),
      "zeogmyaqccmtvokd".to_string(),
      "jqppbzebppdnpurn".to_string(),
      "xixarswxsiwjzgni".to_string(),
      "ezruwzajsoombphs".to_string(),
      "hmiqfeizyprielxf".to_string(),
      "jnaoxljnftymsfey".to_string(),
      "extgzrxzovlsixnf".to_string(),
      "yhyfmovvlrwoezsv".to_string(),
      "ffnybaolppuzpjym".to_string(),
      "pqowimdiusccaagn".to_string(),
      "jgceiosiihpjsmnu".to_string(),
      "hkoexeaopebktngx".to_string(),
      "njhzuvsygymejqav".to_string(),
      "yjkgcclgtvushcfk".to_string(),
      "gmbjxhnkkxlihups".to_string(),
      "pdlwysadiebsidjz".to_string(),
      "omrwmgzulfoaqros".to_string(),
      "ofvvgdezwvcffdcy".to_string(),
      "otytpuklhxcpxhgd".to_string(),
      "eyfaosxdauumvlux".to_string(),
      "mvdthjfstrlqlyuo".to_string(),
      "mdgdchgnlxaxspdm".to_string(),
      "bakjezmhbwqxzevd".to_string(),
      "msakswaphdwaodhg".to_string(),
      "vjcqscgdbnsxdllh".to_string(),
      "jjywaovewbuzreoj".to_string(),
      "nqvplhwacylifvwk".to_string(),
      "lpwmpixbxysmsign".to_string(),
      "flcvbpxrchcpbgcb".to_string(),
      "qjpkeuenenwawlok".to_string(),
      "bnqkflfmdmntctya".to_string(),
      "fzsgzpoqixvpsneq".to_string(),
      "icwfdisutoilejld".to_string(),
      "relchofohnkwbumi".to_string(),
      "aljalgdaqwhzhfwr".to_string(),
      "cahkvnwnbwhodpqs".to_string(),
      "dnrzeunxiattlvdm".to_string(),
      "nsmkhlrpwlunppjs".to_string(),
      "mqqsexlwfqnogwub".to_string(),
      "tfavelkqrtndpait".to_string(),
      "ooguafrnmprfxcnz".to_string(),
      "ntynkiordzxtwrqa".to_string(),
      "rkkyzlxekqqlkvym".to_string(),
      "ofxcivdnwcmgfnme".to_string(),
      "ywotqwbrqxlrnobh".to_string(),
      "nrbbiypwhrqihvev".to_string(),
      "flqsjixxtydheufs".to_string(),
      "lcfrfzypstrqctja".to_string(),
      "hyzbuzawuzjrynny".to_string(),
      "exfbywcnstebnvmq".to_string(),
      "vydzwnbmcihvqrnj".to_string(),
      "qmwqaaylinzrdmiw".to_string(),
      "lpxpztpvfggspeun".to_string(),
      "lhxmqqbracsuyrfm".to_string(),
      "zgkwsrabaseidbrw".to_string(),
      "yjlmbhbqsqgszsun".to_string(),
      "mqfzqtbxtuteabtd".to_string(),
      "izomzdmcqmfrevwd".to_string(),
      "iqijrlqurdwrkoln".to_string(),
      "fxhqzpgoxxjkkhql".to_string(),
      "oulwontmgrjeopnk".to_string(),
      "edaigfydjexvzzvj".to_string(),
      "vjhybiklxpxjqpwc".to_string(),
      "ypxfbfnpbmqmwtte".to_string(),
      "xzvcsgasztrxdzud".to_string(),
      "rpulqmobptfarboo".to_string(),
      "palacmdijxzzykrf".to_string(),
      "jmllwukplufohiby".to_string(),
      "dnswayomusiekfmy".to_string(),
      "sxbrjqtqgzzwhcfo".to_string(),
      "lylvndsgbnbqiejm".to_string(),
      "jaxxhoulxnxnaenr".to_string(),
      "nblissutfazbcpwn".to_string(),
      "zmlsjszzldvbiacr".to_string(),
      "kewojtlchfkclqwk".to_string(),
      "eqvfjasddggvfame".to_string(),
      "yibzqlvxtraxpdon".to_string(),
      "dgnbxsbmdrtyvaac".to_string(),
      "uoxrcxfimhgtxqhy".to_string(),
      "xfdxalrwcwudlviq".to_string(),
      "xmtbdklqptoswpwl".to_string(),
      "zezyopzdztdjerfl".to_string(),
      "xuzluhjsqvhytgbc".to_string(),
      "qdjtmeckispmgzki".to_string(),
      "phakupesplzmmmvc".to_string(),
      "gpuoqfffumzszybn".to_string(),
      "bhywxqkrrlwuebbw".to_string(),
      "ibvwgoyvelzenkzl".to_string(),
      "ncohvvbmiekbaksa".to_string(),
      "fzuvqzvxvdbeirrp".to_string(),
      "lshtzniokucwojjd".to_string(),
      "punrduvlnrulkium".to_string(),
      "gnfpikidnfobrrme".to_string(),
      "vxkvweekmnvkzgyl".to_string(),
      "rhydssudkcjlqgxn".to_string(),
      "cjtqvlaahohcgumo".to_string(),
      "jwzmfyinsfwecgcb".to_string(),
      "blpeseqhlzfilpuf".to_string(),
      "jvtpjkyokzcvagon".to_string(),
      "qjomincbcobjczpe".to_string(),
      "ugsyzkzgdhxtmsfz".to_string(),
      "hleaqgwzqjwajcra".to_string(),
      "coumfghptpnxvvov".to_string(),
      "hqpnbupnzwpdvgqd".to_string(),
      "cpouyodqxgviasem".to_string(),
      "lljvxeyozckifhfd".to_string(),
      "huqtnvutdyfgwtwa".to_string(),
      "yenlveuynmlmmymu".to_string(),
      "ojdyufkomxiwjmbf".to_string(),
      "spjzgvcwvzgffjkk".to_string(),
      "vxykmjhyvmhyssbp".to_string(),
      "tazdeqggfcjfvwwn".to_string(),
      "uumwcngwcytvpufx".to_string(),
      "avovuzkrevloneop".to_string(),
      "owczrtbnrvjfemkt".to_string(),
      "hzpugcanaxyvaokj".to_string(),
      "iishlodnxvjtgzyn".to_string(),
      "qosdonclrnxirham".to_string(),
      "eonqlnwevahydddg".to_string(),
      "ryqmnuikftlxuoqy".to_string(),
      "whqepbcwabzbthha".to_string(),
      "vekisvnwhgpyemxr".to_string(),
      "lrwxzoamnvpnlhap".to_string(),
      "ywepvqthnorfswjv".to_string(),
      "evqwvsoazmwyypjy".to_string(),
      "bgwoojddubppmjxf".to_string(),
      "jypkfrthzgtyeddi".to_string(),
      "tynabbhfjzkrqsju".to_string(),
      "adxstbfqheuqbcuk".to_string(),
      "gqwqiocdyqoiblrx".to_string(),
      "ybuddlyuskdlegxv".to_string(),
      "luwynbsmpgyeqsbr".to_string(),
      "ltyqgqoyljibqndo".to_string(),
      "jaedpajzphfybajh".to_string(),
      "epglnrxofptsqvmy".to_string(),
      "zjdpxkngfkstxbxh".to_string(),
      "ekegphcwanoickfu".to_string(),
      "cqvhuucvejqirvfs".to_string(),
      "uqudnnqumsqcgefo".to_string(),
      "qnzunermlnpcfflo".to_string(),
      "ovyxaniqaawzfuxx".to_string(),
      "djekxcezjowdhopq".to_string(),
      "bwtwbmdehrhpjnlk".to_string(),
      "nilsnlacerweikfa".to_string(),
      "hyrigsrmsrzcyaus".to_string(),
      "gvmdmgddduylmxic".to_string(),
      "ewzovdblhmjgjwsk".to_string(),
      "ojjfsknlonzguzlq".to_string(),
      "yjgfruvpjvlvrvvq".to_string(),
      "cyoryodwyhzwprbv".to_string(),
      "crsjclrurcquqgut".to_string(),
      "sjhfhobwtojxcmem".to_string(),
      "ibxfjudilmdeksea".to_string(),
      "uqbhdbjoeupyhbcz".to_string(),
      "uqbxigzxuxgmjgnw".to_string(),
      "jashafmtzrhswirg".to_string(),
      "dexiolovaucyooka".to_string(),
      "czjbwwnlwcoqnoiu".to_string(),
      "ojigosazigfhttjc".to_string(),
      "zfiqtgrqbmftknzn".to_string(),
      "dlzbmvmolssbqlzl".to_string(),
      "sgmchcurrutdtsmw".to_string(),
      "scdwjqsdohcdrwry".to_string(),
      "cgtdvecqwplpprxn".to_string(),
      "iiplenflfczaktwi".to_string(),
      "wmgnwfxfcjhyeiqg".to_string(),
      "giihshowtcatecvl".to_string(),
      "nqhzfincclumvkaz".to_string(),
      "kxstpzgdfvepionc".to_string(),
      "agbhxcijxjxerxyi".to_string(),
      "hmgfqevgdyvisyvs".to_string(),
      "tthakmvpowpvhtao".to_string(),
      "ottalcghygpaafbo".to_string(),
      "aplvozayycremgqg".to_string(),
      "dbjxlnaouxqtdpfz".to_string(),
      "peeyallzjsdvpalc".to_string(),
      "ndtdjyboixuyhfox".to_string(),
      "llabnbcobexfoldn".to_string(),
      "cweuvfnfyumbjvxr".to_string(),
      "ewkhhepaosalnvkk".to_string(),
      "pivyiwsiqpwhagyx".to_string(),
      "auzsnwdcerfttawt".to_string(),
      "grbfrekupciuzkrt".to_string(),
      "byfwzadtzrbndluf".to_string(),
      "lluypxjeljzquptk".to_string(),
      "pskwsnhqanemtfou".to_string(),
      "sxvrtqqjdjkfhhrm".to_string(),
      "ulsmqgmshvijyeqh".to_string(),
      "qigofesfhekoftkf".to_string(),
      "zhatniakqtqcxyqa".to_string(),
      "uuczvylgnxkenqee".to_string(),
      "mlitvtuxknihmisc".to_string(),
      "srrtrxdvcokpyfmz".to_string(),
      "osispuucklxcfkeb".to_string(),
      "vqhazlaulmnpipql".to_string(),
      "umkiueljberqhdig".to_string(),
      "knvpbkbvgoqzwprp".to_string(),
      "nbsocqikhuvsbloj".to_string(),
      "wjnpepjkzkednqbm".to_string(),
      "agbhmytsofuyqcor".to_string(),
      "gvogzhkkpxyfecko".to_string(),
      "ardafguxifeipxcn".to_string(),
      "yiajcskbgykyzzkw".to_string(),
      "sejunbydztyibnpq".to_string(),
      "dqrgfggwcnxeiygy".to_string(),
      "xnqqwilzfbhcweel".to_string(),
      "jjtifhlvmyfxajqi".to_string(),
      "gwszrpgpmbpiwhek".to_string(),
      "kydzftzgcidiohfd".to_string(),
      "efprvslgkhboujic".to_string(),
      "kecjdfwqimkzuynx".to_string(),
      "rildnxnexlvrvxts".to_string(),
      "dlnhjbqjrzpfgjlk".to_string(),
      "qluoxmzyhkbyvhub".to_string(),
      "crydevvrjfmsypbi".to_string(),
      "dosaftwumofnjvix".to_string(),
      "pwsqxrfwigeffvef".to_string(),
      "nzyfmnpwqyygjvfx".to_string(),
      "iccbckrkxlwjsjat".to_string(),
      "bmputypderxzrwab".to_string(),
      "bhuakynbwnlreixb".to_string(),
      "qmrzfyqjiwaawvvk".to_string(),
      "juvtixbkwyludftn".to_string(),
      "zapmjxmuvhuqlfol".to_string(),
      "paiwrqjhpjavuivm".to_string(),
      "tsepfbiqhhkbyriz".to_string(),
      "jpprewufiogxoygk".to_string(),
      "mmapyxbsugcsngef".to_string(),
      "pduhmgnepnpsshnh".to_string(),
      "aetndoqjvqyjrwut".to_string(),
      "fnfvlorhwpkkemhz".to_string(),
      "gedfidpwvoeazztl".to_string(),
      "beclvhospgtowaue".to_string(),
      "wsclsvthxustmczm".to_string(),
      "tjbxhnpniuikijhe".to_string(),
      "rhetyhvfcemponeg".to_string(),
      "mavonujurprbeexi".to_string(),
      "argbrpomztrdyasa".to_string(),
      "bzvtffbtygjxmkvh".to_string(),
      "maqyqkhsqgzfzvve".to_string(),
      "seeirbiynilkhfcr".to_string(),
      "wxmanwnozfrlxhwr".to_string(),
      "dieulypsobhuvswb".to_string(),
      "nxevassztkpnvxtb".to_string(),
      "jclxuynjsrezvlcy".to_string(),
      "xlolzyvgmwjsbmyf".to_string(),
      "tguzoeybelluxwxc".to_string(),
      "fkchoysvdoaasykz".to_string(),
      "cyynwbfcqpqapldf".to_string(),
      "rhifmzpddjykktuy".to_string(),
      "ndvufsyusbxcsotm".to_string(),
      "txutnzvdsorrixgg".to_string(),
      "qjoczhukbliojneu".to_string(),
      "ufhwujotncovjjsz".to_string(),
      "kclsgsdwcrxsycbr".to_string(),
      "yscwmlrdaueniiic".to_string(),
      "nxhivrovpkgsmugb".to_string(),
      "fdxqfyvwwvgeuqkv".to_string(),
      "femtamfylysohmpr".to_string(),
      "amsyzslvyxsoribh".to_string(),
      "nhmqxncwsonhgbcz".to_string(),
      "uomqsvcbpthlmcue".to_string(),
      "kxtfapcqrnjkkslj".to_string(),
      "xtieihonlfubeync".to_string(),
      "adpcjqxgydulchgj".to_string(),
      "cjynnzsmmujsxxpd".to_string(),
      "neeapmzweidordog".to_string(),
      "szoivgqyqwnyjsnk".to_string(),
      "uwgrtzaqezgphdcu".to_string(),
      "ptpgttqxocjwxohi".to_string(),
      "fhltebsizfwzpgpf".to_string(),
      "emmsazsidspkhgnh".to_string(),
      "dxcprkbcjeqxqzgn".to_string(),
      "tpxzqwxbzwigdtlt".to_string(),
      "afsmksnmzustfqyt".to_string(),
      "xyehnftstacyfpit".to_string(),
      "vcrfqumhjcmnurlw".to_string(),
      "rrznpjzcjgnugoch".to_string(),
      "gbxnzkwsjmepvgzk".to_string(),
      "jwobshgwerborffm".to_string(),
      "zmuvfkhohoznmifs".to_string(),
      "buyuwgynbtujtura".to_string(),
      "bevncenmpxfyzwtf".to_string(),
      "hqqtcrhzfsrcutjh".to_string(),
      "kbpzshllpiowepgc".to_string(),
      "alspewedcukgtvso".to_string(),
      "xvsvzzdcgjuvutrw".to_string(),
      "pmwulqraatlbuski".to_string(),
      "abuzsiinbueowpqn".to_string(),
      "oedruzahyfuchijk".to_string(),
      "avhcuhqqjuqkesoq".to_string(),
      "azqgplkzsawkvnhb".to_string(),
      "rjyoydogkzohhcvx".to_string(),
      "aezxwucqvqxuqotb".to_string(),
      "kxobnsjvzvenyhbu".to_string(),
      "nnjoiilshoavzwly".to_string(),
      "aijttlxjrqwaewgk".to_string(),
      "cvsaujkqfoixarsw".to_string(),
      "zngtoacpxcsplgal".to_string(),
      "qhkxliqtokvepcdv".to_string(),
      "aixihrtdmxkfvcqw".to_string(),
      "owbgdgdymxhhnoum".to_string(),
      "tajsagmruwzuakkd".to_string(),
      "ckrfduwmsodeuebj".to_string(),
      "alfdhuijuwyufnne".to_string(),
      "xpchlkijwuftgmnm".to_string(),
      "rwcrvgphistiihlg".to_string(),
      "xdaksnorrnkihreq".to_string(),
      "akeschycpnyyuiug".to_string(),
      "rgputhzsvngfuovz".to_string(),
      "lerknhznuxzdhvre".to_string(),
      "mqiqmyladulbkzve".to_string(),
      "csnmupielbbpyops".to_string(),
      "kwgrwgmhfzjbwxxz".to_string(),
      "npwtvbslvlxvtjsd".to_string(),
      "zxleuskblzjfmxgf".to_string(),
      "hexvporkmherrtrn".to_string(),
      "rhtdhcagicfndmbm".to_string(),
      "qhnzyuswqwoobuzz".to_string(),
      "dpvanjuofrbueoza".to_string(),
      "kjcqujmnhkjdmrrf".to_string(),
      "gholddsspmxtpybg".to_string(),
      "jihlvyqdyzkshfsi".to_string(),
      "zuviqmuqqfmtneur".to_string(),
      "kzexjowatvkohrtx".to_string(),
      "wgijnfhibsiruvnl".to_string(),
      "zevkrkmhsxmicijb".to_string(),
      "khxrcteqourjvoxa".to_string(),
      "ylpxlkcnenbxxtta".to_string(),
      "zrfsvctbojjkpvtw".to_string(),
      "nlzbudxibnmcrxbt".to_string(),
      "cqnscphbicqmyrex".to_string(),
      "ywvdohheukipshcw".to_string(),
      "riwatbvjqstubssf".to_string(),
      "idlztqqaxzjiyllu".to_string(),
      "sdpdgzemlqtizgxn".to_string(),
      "rjtbovqlgcgojyjx".to_string(),
      "fnfrfwujmjwdrbdr".to_string(),
      "osnppzzmrpxmdhtj".to_string(),
      "ljhwngclvydkwyoe".to_string(),
      "chwqkrkzrvjwarat".to_string(),
      "jmydkwpibkvmqlgs".to_string(),
      "zvhfmbxnlxtujpcz".to_string(),
      "jsnhsphowlqupqwj".to_string(),
      "fzhkkbpasthopdev".to_string(),
      "jerntjdsspdstyhf".to_string(),
      "gctwmaywbyrzwdxz".to_string(),
      "xemeaiuzlctijykr".to_string(),
      "xulrqevtbhplmgxc".to_string(),
      "yfejfizzsycecqpu".to_string(),
      "gboxrvvxyzcowtzm".to_string(),
      "lpvhcxtchwvpgaxp".to_string(),
      "wdiwucbdyxwnjdqf".to_string(),
      "qgwoqazzjlvnjrwj".to_string(),
      "prtlnkakjfqcjngn".to_string(),
      "fagvxsvjpuvqxniz".to_string(),
      "xacmxveueaakfbsm".to_string(),
      "ginvtonnfbnugkpz".to_string(),
      "qpvggsppewfzvwin".to_string(),
      "reoqnlzruyyfraxa".to_string(),
      "kolwtqhifjbbuzor".to_string(),
      "vrkcywvdhdprztww".to_string(),
      "ngdvyfmvjqhbzbxt".to_string(),
      "rooxeoilqzqjunmp".to_string(),
      "efxmdprtogtxgyqs".to_string(),
      "qrhjuqndgurcmwgu".to_string(),
      "ouitjprueefafzpl".to_string(),
      "kirdwcksqrbwbchp".to_string(),
      "fpumsmogojuywezo".to_string(),
      "lgjrgykywugzjees".to_string(),
      "xigioqcpjabpbdas".to_string(),
      "ewkhuprpqzikmeop".to_string(),
      "fgrgxsqeducigxvr".to_string(),
      "bclkursnqkzmjihl".to_string(),
      "jozidniwvnqhvsbc".to_string(),
      "oghcilcyozrmmpta".to_string(),
      "xbgmaungzcpasapi".to_string(),
      "iqowypfiayzbcvhv".to_string(),
      "opdehgwdgkocrgkf".to_string(),
      "zfzvdjeinlegcjba".to_string(),
      "vhakxvlcayuzukap".to_string(),
      "xyradgyiebpevnwe".to_string(),
      "eamhtflgedwyshkn".to_string(),
      "igteqdgchjeulfth".to_string(),
      "kwsfkigxzpbgdxod".to_string(),
      "vapnpsbdboiewpzp".to_string(),
      "wbuqhjsngxpqshen".to_string(),
      "vxxilouxuytitwgm".to_string(),
      "cpnwlkwnkeanqnet".to_string(),
      "wdmbtqvvlowftvgb".to_string(),
      "wjtmcecpyqzwpbqg".to_string(),
      "jnxmoxdhvsphcdeg".to_string(),
      "wabxfxpotoywwodn".to_string(),
      "mwbsoxzlqpqobvvh".to_string(),
      "coktshbyzjkxnwlt".to_string(),
      "rzhnggpslwzvyqrp".to_string(),
      "dgzuqbzarbutlkfx".to_string(),
      "wunajaiiwgijfvjh".to_string(),
      "uotdbcgmsvbsfqlb".to_string(),
      "kxdtlgmqbccjqldb".to_string(),
      "ngmjzjwvwbegehfr".to_string(),
      "cvpsabqfpyygwncs".to_string(),
      "wqluvqlhdhskgmzj".to_string(),
      "rbveperybfntcfxs".to_string(),
      "fbmoypqdyyvqyknz".to_string(),
      "zxpgzwnvmuvkbgov".to_string(),
      "yexcyzhyrpluxfbj".to_string(),
      "ltqaihhstpzgyiou".to_string(),
      "munhsdsfkjebdicd".to_string(),
      "plecvjctydfbanep".to_string(),
      "kjrxnnlqrpcieuwx".to_string(),
      "zbcdtcqakhobuscf".to_string(),
      "kgovoohchranhmsh".to_string(),
      "llxufffkyvuxcmfx".to_string(),
      "tgaswqyzqopfvxtw".to_string(),
      "kojcqjkdpzvbtjtv".to_string(),
      "xggdlkmkrsygzcfk".to_string(),
      "vvitpsnjtdqwyzhh".to_string(),
      "gcqjuwytlhxsecci".to_string(),
      "vbsghygcsokphnrg".to_string(),
      "vejqximdopiztjjm".to_string(),
      "hudqtwmwkviiuslp".to_string(),
      "vwswfvpcwwpxlyry".to_string(),
      "gxmfiehdxptweweq".to_string(),
      "qjmekjdcedfasopf".to_string(),
      "pqyxdxtryfnihphf".to_string(),
      "felnavctjjojdlgp".to_string(),
      "hbimufguekgdxdac".to_string(),
      "dhxhtnqgfczywxlr".to_string(),
      "pssottpdjxkejjrh".to_string(),
      "edieanguabapxyig".to_string(),
      "sciinanyqblrbzbb".to_string(),
      "irxpsorkpcpahiqi".to_string(),
      "qsxecaykkmtfisei".to_string(),
      "ivfwlvxlbnrzixff".to_string(),
      "hqxzzfulfxpmivcw".to_string(),
      "vvbpaepmhmvqykdg".to_string(),
      "cetgicjasozykgje".to_string(),
      "wuetifzdarhwmhji".to_string(),
      "gaozwhpoickokgby".to_string(),
      "eldnodziomvdfbuv".to_string(),
      "favpaqktqaqgixtv".to_string(),
      "twbcobsayaecyxvu".to_string(),
      "lzyzjihydpfjgqev".to_string(),
      "wnurwckqgufskuoh".to_string(),
      "fxogtycnnmcbgvqz".to_string(),
      "aetositiahrhzidz".to_string(),
      "dyklsmlyvgcmtswr".to_string(),
      "ykaxtdkjqevtttbx".to_string(),
      "kfmnceyxyhiczzjm".to_string(),
      "nnizopcndipffpko".to_string(),
      "yjmznhzyfinpmvkb".to_string(),
      "sljegcvvbnjhhwdd".to_string(),
      "zmkeadxlwhfahpwg".to_string(),
      "rwvcogvegcohcrmx".to_string(),
      "aguqwrfymwbpscau".to_string(),
      "vlusytjagzvsnbwe".to_string(),
      "smvzhburcgvqtklh".to_string(),
      "rfuprvjkhazrcxpv".to_string(),
      "megqlnoqmymcrclc".to_string(),
      "gvldhkewtmlwqvqv".to_string(),
      "awynhvtyziemnjoa".to_string(),
      "voprnvtnzspfvpeh".to_string(),
      "dhlguqwmunbbekih".to_string(),
      "goayirdhnjrfuiqi".to_string(),
      "eoghydfykxdslohz".to_string(),
      "chpippjykogxpbxq".to_string(),
      "hqbycjweqczwjwgf".to_string(),
      "pvefsrvwumrlvhmt".to_string(),
      "eghwdovaynmctktk".to_string(),
      "crwkxoucibumzawc".to_string(),
      "bzbtahvhkdigvvtj".to_string(),
      "bnbptgihhfubxhho".to_string(),
      "ddqmbwyfmfnjjaro".to_string(),
      "gvtswqyzazihctif".to_string(),
      "vmqctjpgadxztqqb".to_string(),
      "dgnndowtpeooaqqf".to_string(),
      "sxdvctfdtalufxty".to_string(),
      "ylgeexosibsmmckw".to_string(),
      "sxplpyskbpqnojvw".to_string(),
      "coarhxtsvrontyeg".to_string(),
      "fyoaurggjupvzvlv".to_string(),
      "jlyrkqsiwuggvjem".to_string(),
      "uwbsjoxonreuucyi".to_string(),
      "gihuqvwxovbgokes".to_string(),
      "dxzaaxupbcgnxcwf".to_string(),
      "gidrgmvyrlqqslve".to_string(),
      "csflmlvqmonoywpx".to_string(),
      "jkxkpixlythlacnk".to_string(),
      "ejkarcdkdslldugv".to_string(),
      "dbzmsusevohhjkmr".to_string(),
      "cbrqzualjpdtworc".to_string(),
      "kpgidqlmcbpfmmwu".to_string(),
      "zwghjuofexfowqam".to_string(),
      "ncdlxmcrsmsocetz".to_string(),
      "kfprzqacefifjkbd".to_string(),
      "swwzivrxulkhvldc".to_string(),
      "wgqejhigbjwunscp".to_string(),
      "rsstnwcyybfauqxu".to_string(),
      "qhngfxyhdqopyfgk".to_string(),
      "zrndpyyejsmqsiaj".to_string(),
      "xxknxwpvafxiwwjc".to_string(),
      "mmaahwgoiwbxloem".to_string(),
      "tabacndyodmpuovp".to_string(),
      "yriwomauudscvdce".to_string(),
      "duvyscvfidmtcugl".to_string(),
      "mgipxnqlfpjdilge".to_string(),
      "imeeqcdetjuhfjnw".to_string(),
      "dvkutrdofpulqkyh".to_string(),
      "jefvtlktxegpmbya".to_string(),
      "iyzudqgpvlzjfydh".to_string(),
      "giohapxnpaqayryd".to_string(),
      "qheqdprmnqlpztls".to_string(),
      "rdxhijmzegxkotoq".to_string(),
      "hdnmaspumdwnrcdz".to_string(),
      "wafpbgehbuzdgsnc".to_string(),
      "tbtrfztsferdmhsy".to_string(),
      "vusndcyjngtkrtmk".to_string(),
      "ilqblestzxebcifh".to_string(),
      "urfgjbjgzlrfsdlv".to_string(),
      "aptcdvpsqwleqttn".to_string(),
      "bigczjvzokvfofiw".to_string(),
      "zjnjeufonyqgkbpx".to_string(),
      "trcdebioegfqrrdi".to_string(),
      "jrdvdriujlmbqewt".to_string(),
      "jqrcmuxpwurdhaue".to_string(),
      "yjlermsgruublkly".to_string(),
      "zwarvgszuqeesuwq".to_string(),
      "xthhhqzwvqiyctvs".to_string(),
      "mzwwaxnbdxhajyyv".to_string(),
      "nclsozlqrjvqifyi".to_string(),
      "gcnyqmhezcqvksqw".to_string(),
      "deuakiskeuwdfxwp".to_string(),
      "tclkbhqqcydlgrrl".to_string(),
      "qbpndlfjayowkcrx".to_string(),
      "apjhkutpoiegnxfx".to_string(),
      "oaupiimsplsvcsie".to_string(),
      "sdmxrufyhztxzgmt".to_string(),
      "ukfoinnlbqrgzdeh".to_string(),
      "azosvwtcipqzckns".to_string(),
      "mydyeqsimocdikzn".to_string(),
      "itfmfjrclmglcrkc".to_string(),
      "swknpgysfscdrnop".to_string(),
      "shyyuvvldmqheuiv".to_string(),
      "tljrjohwhhekyhle".to_string(),
      "dayinwzuvzimvzjw".to_string(),
      "qgylixuuervyylur".to_string(),
      "klqqaiemurawmaaz".to_string(),
      "hdmzgtxxjabplxvf".to_string(),
      "xiivzelzdjjtkhnj".to_string(),
      "ktgplkzblgxwrnvo".to_string(),
      "gvbpyofzodnknytd".to_string(),
      "lqhlmnmhakqeffqw".to_string(),
      "ltzdbngrcxwuxecy".to_string(),
      "obxnfjeebvovjcjz".to_string(),
      "zexpwallpocrxpvp".to_string(),
      "tjpkkmcqbbkxaiak".to_string(),
      "qiedfixxgvciblih".to_string(),
      "qcxkhghosuslbyih".to_string(),
      "gnsfidwhzaxjufgm".to_string(),
      "xrghwgvyjakkzidw".to_string(),
      "tftftwedtecglavz".to_string(),
      "wquqczzkzqrlfngr".to_string(),
      "twibtkijpvzbsfro".to_string(),
      "bmplypdsvzuhrjxp".to_string(),
      "zanrfmestvqpwbuh".to_string(),
      "zonrhfqowyimcukm".to_string(),
      "kpvajjfmqpbhrjma".to_string(),
      "kujzluicngigjbtp".to_string(),
      "iusguantsrwxdjal".to_string(),
      "kwxeuylcnszswahw".to_string(),
      "visdhnkobxnemldu".to_string(),
      "rogeadmmaicwtabl".to_string(),
      "pxqycifbgevqudvs".to_string(),
      "osaiozyvlyddylqr".to_string(),
      "vffjxrolrpuxcatx".to_string(),
      "jbmsetccdrywssjd".to_string(),
      "qgxyhjfpbfifmvgc".to_string(),
      "npejgalglldxjdhs".to_string(),
      "mbbtqgmttastrlck".to_string(),
      "whapaqwdtpkropek".to_string(),
      "dulbdboxazfyjgkg".to_string(),
      "xaymnudlozbykgow".to_string(),
      "lebvqmxeaymkkfoy".to_string(),
      "bmicnfuubkregouj".to_string(),
      "dieatyxxxlvhneoj".to_string(),
      "yglaapcsnsbuvrva".to_string(),
      "bbpjaslqpzqcwkpk".to_string(),
      "xehuznbayagrbhnd".to_string(),
      "ikqmeovaurmqfuvr".to_string(),
      "ylyokwuzxltvxmgv".to_string(),
      "hqtfinrkllhqtoiz".to_string(),
      "pjmhtigznoaejifx".to_string(),
      "fqdbmowkjtmvvrmx".to_string(),
      "uvqtqfoulvzozfxv".to_string(),
      "rpajajukuxtchrjd".to_string(),
      "sznucejifktvxdre".to_string(),
      "ufvibsmoushmjbne".to_string(),
      "xirdqoshngthfvax".to_string(),
      "iafpkddchsgdqmzl".to_string(),
      "vmualmlduipvykzh".to_string(),
      "fnmuahmblwyceejb".to_string(),
      "ilsaapnswfoymiov".to_string(),
      "lenvylifraahaclv".to_string(),
      "cukqxlipuyxedqfh".to_string(),
      "zgwecslpniqvtvuz".to_string(),
      "cdcdfpsxuyrhsmag".to_string(),
      "dszjinhantnxgqra".to_string(),
      "ioimwotsgnjeacgt".to_string(),
      "dqcymnvjystbynhp".to_string(),
      "yibaudyfefbfgunx".to_string(),
      "cabslcvunjavqkbf".to_string(),
      "goymzvmgkvlsmugf".to_string(),
      "zxteiitpthzskjjx".to_string(),
      "agnxcnaqhjhlurzs".to_string(),
      "cvmgyxhhnykuxbmb".to_string(),
      "cgqmjexydmvgwxpp".to_string(),
      "sygjajofieojiuna".to_string(),
      "clpvxbrbjvqfbzvu".to_string(),
      "cbntswqynsdqnhyv".to_string(),
      "bztpbtwbefiotkfa".to_string(),
      "pnxccbgajvhyeybu".to_string(),
      "asyzrvgzumtuissa".to_string(),
      "facjyblvcqqginxa".to_string(),
      "rvwnucnbsvberxuv".to_string(),
      "ghrbeykzrxclasie".to_string(),
      "ekujtselepgjtaql".to_string(),
      "krtrzsmduhsifyiw".to_string(),
      "ticjswvsnyrwhpnt".to_string(),
      "clmjhsftkfjzwyke".to_string(),
      "lbxlcixxcztddlam".to_string(),
      "xhfeekmxgbloguri".to_string(),
      "azxqwlucwhahtvep".to_string(),
      "kitdjrwmockhksow".to_string(),
      "keznwwcusgbtvfrs".to_string(),
      "ljvzxoywcofgwajj".to_string(),
      "vebjnhnkcfzbhrcw".to_string(),
      "eqfcxkavstxcuels".to_string(),
      "ldattkyawjrvcido".to_string(),
      "bsqqeilshcwtqyil".to_string(),
      "foqqsxahfiozcqrw".to_string(),
      "liswfmuhzfbyzjhf".to_string(),
      "sulbdcyzmolapfbs".to_string(),
      "zuggzkelwxjpsgxb".to_string(),
      "betioxrgtnhpivcw".to_string(),
      "xmtbixstdipibhgs".to_string(),
      "ttvurgqmulryyaji".to_string(),
      "viobnljznzppfmxw".to_string(),
      "qlzabfopydtxrlet".to_string(),
      "tusvydegfxhaxolk".to_string(),
      "thoufvvfjferxhwp".to_string(),
      "cfyyzppfarjiilbs".to_string(),
      "jwmhxtgafkkgseqs".to_string(),
      "pqwuuaxbeklodwpt".to_string(),
      "vndyveahdiwgkjyx".to_string(),
      "ssrjgasfhdouwyoh".to_string(),
      "thbavfcisgvvyekf".to_string(),
      "yjdvxmubvqadgypa".to_string(),
      "tlbmcxaelkouhsvu".to_string(),
      "bonohfnlboxiezzr".to_string(),
      "rktlxcbkhewyvcjl".to_string(),
      "rsmoutcbcssodvsc".to_string(),
      "qszdratuxcrhsvoh".to_string(),
      "eypyfahpuzqwzwhi".to_string(),
      "yhkrleqmqlmwdnio".to_string(),
      "vpnvxusvmngsobmq".to_string(),
      "hkzyhopvxrsimzys".to_string(),
      "dblriiwnrvnhxykl".to_string(),
      "xkriqxkrprjwpncs".to_string(),
      "rcymltrbszhyhqti".to_string(),
      "mzbvneplsnpiztzn".to_string(),
      "vkqtnptgbqefvfoc".to_string(),
      "nwdtfiaozkcjtlax".to_string(),
      "crximadpvdaccrsm".to_string(),
      "lrbajafxwwnxvbei".to_string(),
      "rbexzesrytpwwmjf".to_string(),
      "stxwjarildpnzfpg".to_string(),
      "btamaihdivrhhrrv".to_string(),
      "acqbucebpaulpotl".to_string(),
      "dkjhzghxxtxgdpvm".to_string(),
      "rsbzwsnvlpqzyjir".to_string(),
      "mizypbwvpgqoiams".to_string(),
      "nvrslorjpqaasudn".to_string(),
      "wvexcpzmconqkbvk".to_string(),
      "rfwfumhjwzrvdzam".to_string(),
      "eaghdaqorkhdsmth".to_string(),
      "gtuntmpqaivosewh".to_string(),
      "nzlsmdgjrigghrmy".to_string(),
      "dhuvxwobpzbuwjgk".to_string(),
      "kkcuvbezftvkhebf".to_string(),
      "aeediumxyljbuyqu".to_string(),
      "rfkpqeekjezejtjc".to_string(),
      "wkzasuyckmgwddwy".to_string(),
      "eixpkpdhsjmynxhi".to_string(),
      "elrlnndorggmmhmx".to_string(),
      "ayxwhkxahljoxggy".to_string(),
      "mtzvvwmwexkberaw".to_string(),
      "evpktriyydxvdhpx".to_string(),
      "otznecuqsfagruls".to_string(),
      "vrdykpyebzyblnut".to_string(),
      "cnriedolerlhbqjy".to_string(),
      "uajaprnrrkvggqgx".to_string(),
      "xdlxuguloojvskjq".to_string(),
      "mfifrjamczjncuym".to_string(),
      "otmgvsykuuxrluky".to_string(),
      "oiuroieurpyejuvm".to_string()
    ]
  }
}
